Итоговая работа по Проекту 3. О вкусной и здоровой пище. Perdict TripAdvisor Rating

Создана первая модель, использующая алгоритмы машинного обучения.

1. Представим, что мы работаетаем DS в компании TripAdvisor. Одна из проблем компании — это нечестные рестораны, которые накручивают себе рейтинг. 
Одним из способов нахождения таких ресторанов является построение модели, которая предсказывает рейтинг ресторана. 
Если предсказания модели сильно отличаются от фактического результата, то, возможно, ресторан играет нечестно, и его стоит проверить.

Поставлена задача создать такую модель. 

Будем работать с датасетом, содержащим сведения о 40 000 ресторанах Европы, а модель, которую будем обучать, должна будет предсказывать рейтинг ресторана 
по данным сайта TripAdvisor на основе имеющихся в датасете данных.

Код для создания модели предоставлен, модель работает на основе одного из довольно мощных алгоритмов машинного обучения — RandomForestRegression,
но чтобы модель заработала, в неё нужно загрузить правильные данные. Приведение данных в нужный вид и будет нашей задачей. 

Для корректной работы все данные в датафрейме, которые будем использовать при обучении модели, должны быть в форматах int или float.

2. Этапы работы над проектом, основные шаги:

Первичный осмотр данных;
Проверка количества уникальных значений;
Проверка данных на пустые значения;
Обработка None-значений;
Отобратка данных, пригодных для дальнейшего построения модели;
Анализ номинативных переменных и устранение тех, которые не влияют на работу модели;
Генерирация\создание новых признаков  (Feature Engineering)  (добавление в датафрейм новых столбцов) на основе информации, уже содержащейся в данных;
Перевод категориальных признаков в числовые, в машинном обучении используем концепцию dummy variables;
Используем дополнительные источники информации о городах и странах;
Выводы.

3. Разделение датафрейма
Прежде всего для создания модели необходимо разделить датафрейм на набор данных, которые будем использовать для обучения модели (X), и на целевую переменную,
т.е. величину, значение которой мы будем предсказывать (y).

Далее каждый из полученных наборов мы делим на тренировочный (train, используется для обучения модели) и тестовый (test, используется для оценки точности модели).
Такое деление осуществляется с помощью специального метода, входящего в состав библиотеки Scikit-Learn (sklearn).
В параметрах метода мы указываем, какую часть исходного датафрейма нужно оставить для тестирования модели. В нашем коде эта часть составляет 25% или 0.25.

4. Далее обучение и тестирование модели 


5. Задания с kaggle

Условия соревнования:

Все участники должны использовать один и тот же алгоритм с параметрами, заданными по умолчанию.
Разрешено использовать внешние данные.
Решения буду проверяться преподавателями на их адекватность и воспроизводимость.
Во вкладке Notebooks этого соревнования доступно Базовое решение (Baseline) 

Шаблон ноутбука с параметрами модели
Базовое решение (Baseline) содержит настройки для модели 
(RandomForestRegression) == model = RandomForestRegressor(n_estimators=100, verbose=1, n_jobs=-1, random_state=RANDOM_SEED)

6. Submission

7. Результат
score - 0.20


